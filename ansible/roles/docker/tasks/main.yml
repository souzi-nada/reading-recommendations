---
# tasks file for docker
# - name: Download Docker Installation Script
#   ansible.builtin.shell: "curl -fsSL https://get.docker.com -o get-docker.sh"
#   args:
#     creates: get-docker.sh
# - name: Run Docker Installation Script
#   ansible.builtin.shell: "sh get-docker.sh"
#   args:
#     creates: /usr/bin/docker || /usr/local/bin/docker
#   register: docker_install_output
#   ignore_errors: true

# - name: Debug Docker installation output
#   debug:
#     var: docker_install_output.stderr

# - name: Start and Enable Docker Service
#   service:
#     name: docker
#     enabled: yes
#     state: started
# - name: Add the current user to the docker group
#   ansible.builtin.user:
#     name: "jenkins"  # Use the appropriate username
#     groups: docker
#     append: yes

# - name: Check Docker installation
#   ansible.builtin.command: docker --version
#   register: docker_version_check
#   failed_when: "'Docker version' not in docker_version_check.stdout"

# - name: Debug Docker version
#   debug:
#     var: docker_version_check.stdout
- name: Remove old Docker versions
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
    purge: yes

- name: Remove Docker-related leftover files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /var/lib/docker
    - /etc/docker
    - /var/lib/containerd
    - /run/docker
    - /run/containerd
    
- name: Install Docker from Ubuntu repositories
  apt:
    name: docker.io
    state: present
  become: true

- name: Ensure Docker service is enabled and running
  service:
    name: docker
    state: started
    enabled: true
  become: true

- name: Add user to Docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true
  become: true