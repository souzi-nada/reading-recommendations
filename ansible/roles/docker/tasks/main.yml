---
# tasks file for docker
# - name: Download Docker Installation Script
#   ansible.builtin.shell: "curl -fsSL https://get.docker.com -o get-docker.sh"
#   args:
#     creates: get-docker.sh

# - name: Run Docker Installation Script
#   ansible.builtin.shell: "sh get-docker.sh"
#   args:
#     creates: /usr/bin/docker || /usr/local/bin/docker
#   register: docker_install_output
#   ignore_errors: true

# - name: Debug Docker installation output
#   debug:
#     var: docker_install_output.stderr

# - name: Start and Enable Docker Service
#   service:
#     name: docker
#     enabled: yes
#     state: started
#   become: true

# - name: Add the current user to the docker group
#   ansible.builtin.user:
#     name: "jenkins"  # Use the appropriate username
#     groups: docker
#     append: yes

# - name: Check Docker installation
#   ansible.builtin.command: docker --version
#   register: docker_version_check
#   failed_when: "'Docker version' not in docker_version_check.stdout"

# - name: Debug Docker version
#   debug:
#     var: docker_version_check.stdout
- name: Update apt repository
  apt:
    update_cache: yes
  
- name: Download Docker installation script
  ansible.builtin.shell: "curl -fsSL https://get.docker.com -o /tmp/get-docker.sh"
  args:
    creates: /tmp/get-docker.sh

- name: Run Docker installation script
  ansible.builtin.shell: "sh /tmp/get-docker.sh"
  args:
    creates: /usr/bin/docker

- name: Start and enable Docker service
  ansible.builtin.systemd:
    name: docker
    enabled: yes
    state: started

- name: Add the current user to the docker group
  ansible.builtin.user:
    name: "ubuntu"  # Use the current user running the playbook
    groups: docker
    append: yes

- name: Install Python 3 and Pip
  apt:
    name:
      - python3
      - python3-pip
    state: present
    update_cache: yes