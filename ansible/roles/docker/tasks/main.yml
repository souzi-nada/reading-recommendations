---
# tasks file for docker
# - name: Download Docker Installation Script
#   ansible.builtin.shell: "curl -fsSL https://get.docker.com -o get-docker.sh"
#   args:
#     creates: get-docker.sh

# - name: Run Docker Installation Script
#   ansible.builtin.shell: "sh get-docker.sh"
#   args:
#     creates: /usr/bin/docker || /usr/local/bin/docker
#   register: docker_install_output
#   ignore_errors: true

# - name: Debug Docker installation output
#   debug:
#     var: docker_install_output.stderr

# - name: Start and Enable Docker Service
#   service:
#     name: docker
#     enabled: yes
#     state: started
#   become: true

# - name: Add the current user to the docker group
#   ansible.builtin.user:
#     name: "jenkins"  # Use the appropriate username
#     groups: docker
#     append: yes

# - name: Check Docker installation
#   ansible.builtin.command: docker --version
#   register: docker_version_check
#   failed_when: "'Docker version' not in docker_version_check.stdout"

# - name: Debug Docker version
#   debug:
#     var: docker_version_check.stdout
# - name: Update apt repository
#   apt:
#     update_cache: yes
  
# - name: Download Docker installation script
#   ansible.builtin.shell: "curl -fsSL https://get.docker.com -o /tmp/get-docker.sh"
#   args:
#     creates: /tmp/get-docker.sh

# - name: Run Docker installation script
#   ansible.builtin.shell: "sh /tmp/get-docker.sh"
#   args:
#     creates: /usr/bin/docker

# - name: Start and enable Docker service
#   ansible.builtin.systemd:
#     name: docker
#     enabled: yes
#     state: started

# - name: Add the current user to the docker group
#   ansible.builtin.user:
#     name: "ubuntu"  # Use the current user running the playbook
#     groups: docker
#     append: yes

# - name: Install Python 3 and Pip
#   apt:
#     name:
#       - python3
#       - python3-pip
#     state: present
#     update_cache: yes
# - name: Install requests library using pip
#   pip:
#     name:
#       - requests
#       - beautifulsoup4
#     state: present

# - name: Verify requests library installation
#   command: python3 -c "import requests; print('requests is installed')"
#   register: requests_check
#   failed_when: "'requests is installed' not in requests_check.stdout"
# - name: Pull the Docker-in-Docker image
#   docker_image:
#     name: docker:dind
#     source: pull
#     # pull: true

# - name: Run the Docker-in-Docker container
#   docker_container:
#     name: my_dind_container
#     image: docker:dind
#     privileged: yes
#     detach: yes
#     ports:
#       - "2375:2375"

- name: Update and install prerequisites
  apt:
    name: 
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present
    update_cache: yes

#- name: Add Docker's official GPG key
#  command: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
- name: Add Docker GPG key
  ansible.builtin.shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -

# - name: Set up the Docker repository
#   command: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

# - name: Print architecture variables
#   ansible.builtin.debug:
#     msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"

- name: Add repository into sources list
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    state: present
    filename: docker

- name: Update the apt package index
  apt:
    update_cache: yes

- name: Install Docker and related packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin

- name: Add Docker group
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to Docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Enable and start Docker services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - docker.service
    - containerd.service

# - name: Install Docker
#   apt:
#     name: docker-ce
#     state: present

# - name: Ensure Docker service is running
#   service:
#     name: docker
#     state: started